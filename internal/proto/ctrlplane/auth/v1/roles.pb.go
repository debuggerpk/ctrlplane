// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: ctrlplane/auth/v1/roles.proto

package authv1

import (
	_ "go.breu.io/quantm/internal/proto/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Resource int32

const (
	Resource_UNSPECIFIED Resource = 0
	Resource_ALL         Resource = 1 // All is a special resource
	Resource_ORGS        Resource = 2 // Organizations
	Resource_TEAMS       Resource = 3 // Teams
	Resource_USERS       Resource = 4 // Users
	Resource_REPOS       Resource = 5 // Repositories
	Resource_HOOKS       Resource = 6 // Integration hooks
)

// Enum value maps for Resource.
var (
	Resource_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ALL",
		2: "ORGS",
		3: "TEAMS",
		4: "USERS",
		5: "REPOS",
		6: "HOOKS",
	}
	Resource_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ALL":         1,
		"ORGS":        2,
		"TEAMS":       3,
		"USERS":       4,
		"REPOS":       5,
		"HOOKS":       6,
	}
)

func (x Resource) Enum() *Resource {
	p := new(Resource)
	*p = x
	return p
}

func (x Resource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resource) Descriptor() protoreflect.EnumDescriptor {
	return file_ctrlplane_auth_v1_roles_proto_enumTypes[0].Descriptor()
}

func (Resource) Type() protoreflect.EnumType {
	return &file_ctrlplane_auth_v1_roles_proto_enumTypes[0]
}

func (x Resource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resource.Descriptor instead.
func (Resource) EnumDescriptor() ([]byte, []int) {
	return file_ctrlplane_auth_v1_roles_proto_rawDescGZIP(), []int{0}
}

// Permission is a reousrce and a list of actions that can be performed on that resource.
// Our system has a fixed number of resources and actions that can be performed on them.
//
// # The actions are
//
// - read
// - write
//
// # The resources are
//
// - orgs
// - teams
// - users
// - repos
// - hooks
//
// We also have a special resource called "all" that can be used to grant permissions
// on all resources within an organization. This will be enforced by a hardcoded
// json file that will be loaded at startup. This is a temporary solution until
// we have a more robust permission system.
type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resource      Resource               `protobuf:"varint,1,opt,name=resource,proto3,enum=ctrlplane.auth.v1.Resource" json:"resource,omitempty"`
	Actions       []string               `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_ctrlplane_auth_v1_roles_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_ctrlplane_auth_v1_roles_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_ctrlplane_auth_v1_roles_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetResource() Resource {
	if x != nil {
		return x.Resource
	}
	return Resource_UNSPECIFIED
}

func (x *Permission) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Role is a named collection of permissions. For ease of use, currently
// we only support one role per user. This may change in the future.
// We also have two roles that are built in: "admin" and "user".
//
// [
//
//	{
//	  "name": "admin",
//	  "permissions": [
//	    {
//	      "resource": "all",
//	      "action": [
//	        "read",
//	        "write"
//	      ]
//	    }
//	  ]
//	},
//	{
//	  "name": "member",
//	  "permissions": [
//	    {
//	      "resource": "all",
//	      "action": [
//	        "read",
//	      ]
//	    }
//	  ]
//	}
//
// ]
type Role struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_ctrlplane_auth_v1_roles_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_ctrlplane_auth_v1_roles_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_ctrlplane_auth_v1_roles_proto_rawDescGZIP(), []int{1}
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_ctrlplane_auth_v1_roles_proto protoreflect.FileDescriptor

var file_ctrlplane_auth_v1_roles_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7c, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1b, 0xba, 0x48, 0x18, 0x92, 0x01, 0x15, 0x08,
	0x01, 0x18, 0x01, 0x22, 0x0f, 0x72, 0x0d, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x52, 0x05, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x5a, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x4f, 0x52, 0x47, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x45,
	0x41, 0x4d, 0x53, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x53, 0x45, 0x52, 0x53, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x48,
	0x4f, 0x4f, 0x4b, 0x53, 0x10, 0x06, 0x42, 0xc4, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x42, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39,
	0x67, 0x6f, 0x2e, 0x62, 0x72, 0x65, 0x75, 0x2e, 0x69, 0x6f, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x41, 0x58, 0xaa,
	0x02, 0x11, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5c,
	0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x43, 0x74, 0x72, 0x6c, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x3a, 0x3a, 0x41, 0x75, 0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_ctrlplane_auth_v1_roles_proto_rawDescOnce sync.Once
	file_ctrlplane_auth_v1_roles_proto_rawDescData []byte
)

func file_ctrlplane_auth_v1_roles_proto_rawDescGZIP() []byte {
	file_ctrlplane_auth_v1_roles_proto_rawDescOnce.Do(func() {
		file_ctrlplane_auth_v1_roles_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ctrlplane_auth_v1_roles_proto_rawDesc), len(file_ctrlplane_auth_v1_roles_proto_rawDesc)))
	})
	return file_ctrlplane_auth_v1_roles_proto_rawDescData
}

var file_ctrlplane_auth_v1_roles_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ctrlplane_auth_v1_roles_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ctrlplane_auth_v1_roles_proto_goTypes = []any{
	(Resource)(0),      // 0: ctrlplane.auth.v1.Resource
	(*Permission)(nil), // 1: ctrlplane.auth.v1.Permission
	(*Role)(nil),       // 2: ctrlplane.auth.v1.Role
}
var file_ctrlplane_auth_v1_roles_proto_depIdxs = []int32{
	0, // 0: ctrlplane.auth.v1.Permission.resource:type_name -> ctrlplane.auth.v1.Resource
	1, // 1: ctrlplane.auth.v1.Role.permissions:type_name -> ctrlplane.auth.v1.Permission
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ctrlplane_auth_v1_roles_proto_init() }
func file_ctrlplane_auth_v1_roles_proto_init() {
	if File_ctrlplane_auth_v1_roles_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ctrlplane_auth_v1_roles_proto_rawDesc), len(file_ctrlplane_auth_v1_roles_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ctrlplane_auth_v1_roles_proto_goTypes,
		DependencyIndexes: file_ctrlplane_auth_v1_roles_proto_depIdxs,
		EnumInfos:         file_ctrlplane_auth_v1_roles_proto_enumTypes,
		MessageInfos:      file_ctrlplane_auth_v1_roles_proto_msgTypes,
	}.Build()
	File_ctrlplane_auth_v1_roles_proto = out.File
	file_ctrlplane_auth_v1_roles_proto_goTypes = nil
	file_ctrlplane_auth_v1_roles_proto_depIdxs = nil
}
